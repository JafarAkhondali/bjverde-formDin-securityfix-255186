-- MySQL Script generated by MySQL Workbench
-- Mon Nov 12 01:55:47 2018
-- Model: New Model    Version: 2.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema form_exemplo
-- -----------------------------------------------------
-- banco de dados de exemplo para utilizar o formDin	
DROP SCHEMA IF EXISTS `form_exemplo` ;

-- -----------------------------------------------------
-- Schema form_exemplo
--
-- banco de dados de exemplo para utilizar o formDin	
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `form_exemplo` DEFAULT CHARACTER SET utf8 ;
USE `form_exemplo` ;

-- -----------------------------------------------------
-- Table `form_exemplo`.`pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`pessoa` (
  `idpessoa` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(200) NOT NULL,
  `tipo` CHAR(2) NOT NULL COMMENT '\'Valor permitidos PF ou PJ\'',
  `sit_ativo` VARCHAR(1) NOT NULL DEFAULT 'S',
  `dat_inclusao` DATETIME NOT NULL DEFAULT NOW(),
  PRIMARY KEY (`idpessoa`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`meta_tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`meta_tipo` (
  `idMetaTipo` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(100) NOT NULL,
  `sit_ativo` CHAR(1) NULL DEFAULT 'S',
  PRIMARY KEY (`idMetaTipo`),
  UNIQUE INDEX `descricao_UNIQUE` (`descricao` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`tipo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`tipo` (
  `idtipo` INT NOT NULL AUTO_INCREMENT,
  `descricao` VARCHAR(100) NOT NULL,
  `idmeta_tipo` INT NOT NULL,
  `sit_ativo` CHAR(1) NULL,
  PRIMARY KEY (`idtipo`),
  INDEX `fk_tipo_tipo_de_tipos_idx` (`idmeta_tipo` ASC),
  CONSTRAINT `fk_tipo_tipo_de_tipos`
    FOREIGN KEY (`idmeta_tipo`)
    REFERENCES `form_exemplo`.`meta_tipo` (`idMetaTipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`regiao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`regiao` (
  `cod_regiao` INT NOT NULL,
  `nom_regiao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`cod_regiao`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`uf`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`uf` (
  `cod_uf` INT NOT NULL,
  `nom_uf` VARCHAR(45) NOT NULL,
  `sig_uf` VARCHAR(45) NOT NULL COMMENT 'sigla da uf',
  `cod_regiao` INT NOT NULL,
  PRIMARY KEY (`cod_uf`),
  INDEX `fk_uf_regiao1_idx` (`cod_regiao` ASC),
  CONSTRAINT `fk_uf_regiao1`
    FOREIGN KEY (`cod_regiao`)
    REFERENCES `form_exemplo`.`regiao` (`cod_regiao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`municipio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`municipio` (
  `cod_municipio` INT NOT NULL,
  `cod_uf` INT NOT NULL,
  `nom_municipio` VARCHAR(200) NOT NULL,
  `sit_ativo` VARCHAR(1) NOT NULL DEFAULT 'S',
  PRIMARY KEY (`cod_municipio`),
  INDEX `fk_municipio_uf1_idx` (`cod_uf` ASC),
  CONSTRAINT `fk_municipio_uf1`
    FOREIGN KEY (`cod_uf`)
    REFERENCES `form_exemplo`.`uf` (`cod_uf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`autoridade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`autoridade` (
  `idautoridade` INT NOT NULL AUTO_INCREMENT,
  `dat_inclusao` DATETIME NOT NULL DEFAULT now(),
  `dat_evento` DATE NOT NULL COMMENT 'Data do evento',
  `ordem` INT NOT NULL COMMENT 'ordem daa autoridades',
  `cargo` VARCHAR(100) NOT NULL COMMENT 'nome do cargo da autoridade',
  `nome_pessoa` VARCHAR(100) NOT NULL COMMENT 'nome da pessoa',
  PRIMARY KEY (`idautoridade`))
ENGINE = InnoDB
COMMENT = 'Tabela idependete de qualquer outra do sistema';


-- -----------------------------------------------------
-- Table `form_exemplo`.`pessoa_fisica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`pessoa_fisica` (
  `idpessoa_fisica` INT NOT NULL AUTO_INCREMENT,
  `idpessoa` INT NOT NULL,
  `cpf` VARCHAR(11) NOT NULL,
  `dat_nascimento` DATE NULL,
  `cod_municipio_nascimento` INT NULL,
  `dat_inclusao` DATETIME NOT NULL DEFAULT NOW(),
  `dat_alteracao` DATETIME NULL DEFAULT now() ON UPDATE now(),
  PRIMARY KEY (`idpessoa_fisica`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  INDEX `fk_pessoa_fisica_pessoa1_idx` (`idpessoa` ASC),
  INDEX `fk_pessoa_fisica_municipio1_idx` (`cod_municipio_nascimento` ASC),
  CONSTRAINT `fk_pessoa_fisica_pessoa1`
    FOREIGN KEY (`idpessoa`)
    REFERENCES `form_exemplo`.`pessoa` (`idpessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pessoa_fisica_municipio1`
    FOREIGN KEY (`cod_municipio_nascimento`)
    REFERENCES `form_exemplo`.`municipio` (`cod_municipio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`acesso_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`acesso_user` (
  `iduser` INT NOT NULL AUTO_INCREMENT,
  `login_user` VARCHAR(50) NOT NULL,
  `pwd_user` VARCHAR(200) NULL COMMENT 'senha criptografada com password_hash',
  `sit_ativo` VARCHAR(1) NOT NULL DEFAULT 'S',
  `dat_inclusao` DATETIME NOT NULL DEFAULT NOW(),
  `dat_update` DATETIME NULL DEFAULT now() ON UPDATE now(),
  `idpessoa` INT NULL,
  PRIMARY KEY (`iduser`),
  UNIQUE INDEX `nom_usuario_UNIQUE` (`login_user` ASC),
  INDEX `fk_acesso_user_pessoa1_idx` (`idpessoa` ASC),
  CONSTRAINT `fk_acesso_user_pessoa1`
    FOREIGN KEY (`idpessoa`)
    REFERENCES `form_exemplo`.`pessoa` (`idpessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`acesso_perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`acesso_perfil` (
  `idperfil` INT NOT NULL AUTO_INCREMENT,
  `nom_perfil` VARCHAR(45) NOT NULL,
  `sit_ativo` VARCHAR(1) NOT NULL DEFAULT 'S',
  `dat_inclusao` DATETIME NOT NULL DEFAULT NOW(),
  `dat_update` DATETIME NULL DEFAULT now() ON UPDATE now(),
  PRIMARY KEY (`idperfil`),
  UNIQUE INDEX `nom_perfil_UNIQUE` (`nom_perfil` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`acesso_menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`acesso_menu` (
  `idmenu` INT NOT NULL,
  `nom_menu` VARCHAR(45) NOT NULL COMMENT 'o nome que o usuario irá ver',
  `idmenu_pai` INT NULL COMMENT 'id do menu pai, se o pai é null então começa na raiz',
  `url` VARCHAR(300) NULL COMMENT 'caminho do item de menu',
  `tooltip` VARCHAR(300) NULL COMMENT 'decrição mais detalhada do menu',
  `img_menu` VARCHAR(45) NULL COMMENT 'Caminho da imagem será utilizada como ícone',
  `imgdisabled` VARCHAR(45) NULL COMMENT 'Caminho da imagem para o menu desabilitado',
  `dissabled` VARCHAR(1) NULL DEFAULT 'S' COMMENT 'Informa se o item de menu está habilitado ou não. N = Item de aparece porém não pode ser usada, S = Item menu aparece e pode ser clicado.',
  `hotkey` VARCHAR(45) NULL COMMENT 'Tecla de atalho',
  `boolSeparator` TINYINT NULL,
  `jsonParams` VARCHAR(300) NULL,
  `sit_ativo` VARCHAR(1) NOT NULL DEFAULT 'S' COMMENT 'Informa se o registro está ativo ou não. N = Item de nem aparece, S = Item menu aparece.',
  `dat_inclusao` DATETIME NOT NULL DEFAULT NOW(),
  `dat_update` DATETIME NULL DEFAULT now() ON UPDATE now() COMMENT 'data de update igual inclusao implica que nunca teve alteração',
  PRIMARY KEY (`idmenu`),
  INDEX `fk_acesso_menu_pai_idx` (`idmenu_pai` ASC),
  CONSTRAINT `fk_acesso_menu_pai`
    FOREIGN KEY (`idmenu_pai`)
    REFERENCES `form_exemplo`.`acesso_menu` (`idmenu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`acesso_perfil_menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`acesso_perfil_menu` (
  `idperfilmenu` INT NOT NULL AUTO_INCREMENT,
  `idperfil` INT NOT NULL,
  `idmenu` INT NOT NULL,
  `sit_ativo` VARCHAR(1) NOT NULL DEFAULT 'S',
  `dat_inclusao` DATETIME NOT NULL DEFAULT NOW(),
  `dat_update` DATETIME NULL DEFAULT now() ON UPDATE now(),
  PRIMARY KEY (`idperfilmenu`),
  INDEX `fk_acesso_perfil_menu_acesso_perfil1_idx` (`idperfil` ASC),
  INDEX `fk_acesso_perfil_menu_acesso_menu1_idx` (`idmenu` ASC),
  CONSTRAINT `fk_acesso_perfil_menu_acesso_perfil1`
    FOREIGN KEY (`idperfil`)
    REFERENCES `form_exemplo`.`acesso_perfil` (`idperfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acesso_perfil_menu_acesso_menu1`
    FOREIGN KEY (`idmenu`)
    REFERENCES `form_exemplo`.`acesso_menu` (`idmenu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`acesso_perfil_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`acesso_perfil_user` (
  `idperfiluser` INT NOT NULL AUTO_INCREMENT,
  `idperfil` INT NOT NULL,
  `iduser` INT NOT NULL,
  `sit_ativo` VARCHAR(1) NOT NULL DEFAULT 'S',
  `dat_inclusao` DATETIME NOT NULL DEFAULT NOW(),
  `dat_update` DATETIME NULL DEFAULT now() ON UPDATE now(),
  PRIMARY KEY (`idperfiluser`),
  INDEX `fk_acesso_perfil_user_acesso_user1_idx` (`iduser` ASC),
  INDEX `fk_acesso_perfil_user_acesso_perfil1_idx` (`idperfil` ASC),
  CONSTRAINT `fk_acesso_perfil_user_acesso_user1`
    FOREIGN KEY (`iduser`)
    REFERENCES `form_exemplo`.`acesso_user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_acesso_perfil_user_acesso_perfil1`
    FOREIGN KEY (`idperfil`)
    REFERENCES `form_exemplo`.`acesso_perfil` (`idperfil`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`natureza_juridica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`natureza_juridica` (
  `idnatureza_juridica` INT NOT NULL AUTO_INCREMENT,
  `nom_natureza_juridicac` VARCHAR(300) NOT NULL COMMENT 'Natureza Jurídica ',
  `administradores` VARCHAR(1000) NULL COMMENT 'Integrantes do Quadro de Sócios e Administradores ',
  PRIMARY KEY (`idnatureza_juridica`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`pessoa_juridica`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`pessoa_juridica` (
  `idpessoa_juridica` INT NOT NULL AUTO_INCREMENT,
  `cnpj` VARCHAR(14) NOT NULL,
  `idpessoa` INT NOT NULL,
  `cnae` INT NULL COMMENT 'códigos de atividades econômicas em todo o país',
  `idnatureza_juridica` INT NULL,
  PRIMARY KEY (`idpessoa_juridica`),
  INDEX `fk_pessoa_juridica_pessoa1_idx` (`idpessoa` ASC),
  INDEX `fk_pessoa_juridica_natureza_juridica1_idx` (`idnatureza_juridica` ASC),
  CONSTRAINT `fk_pessoa_juridica_pessoa1`
    FOREIGN KEY (`idpessoa`)
    REFERENCES `form_exemplo`.`pessoa` (`idpessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pessoa_juridica_natureza_juridica1`
    FOREIGN KEY (`idnatureza_juridica`)
    REFERENCES `form_exemplo`.`natureza_juridica` (`idnatureza_juridica`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`marca`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`marca` (
  `idmarca` INT NOT NULL AUTO_INCREMENT,
  `nom_marca` VARCHAR(45) NULL,
  `idpessoa` INT NOT NULL,
  PRIMARY KEY (`idmarca`),
  INDEX `fk_marca_pessoa_idx` (`idpessoa` ASC),
  CONSTRAINT `fk_marca_pessoa1`
    FOREIGN KEY (`idpessoa`)
    REFERENCES `form_exemplo`.`pessoa` (`idpessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`produto` (
  `idproduto` INT NOT NULL AUTO_INCREMENT,
  `nom_produto` VARCHAR(45) NOT NULL,
  `modelo` VARCHAR(45) NOT NULL,
  `versao` VARCHAR(45) NOT NULL,
  `idmarca` INT NOT NULL,
  `idtipo_produto` INT NOT NULL,
  PRIMARY KEY (`idproduto`),
  INDEX `fk_produto_marca1_idx` (`idmarca` ASC),
  INDEX `fk_produto_tipo1_idx` (`idtipo_produto` ASC),
  CONSTRAINT `fk_produto_marca1`
    FOREIGN KEY (`idmarca`)
    REFERENCES `form_exemplo`.`marca` (`idmarca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_tipo1`
    FOREIGN KEY (`idtipo_produto`)
    REFERENCES `form_exemplo`.`tipo` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`pedido` (
  `idpedido` INT NOT NULL AUTO_INCREMENT,
  `idpessoa` INT NOT NULL COMMENT 'Pessoa que irá receber o pagamento',
  `dat_pedido` DATETIME NOT NULL,
  `idtipo_pagamento` INT NOT NULL,
  PRIMARY KEY (`idpedido`),
  INDEX `fk_pedido_tipo1_idx` (`idtipo_pagamento` ASC),
  INDEX `fk_pedido_pessoa1_idx` (`idpessoa` ASC),
  CONSTRAINT `fk_pedido_tipo1`
    FOREIGN KEY (`idtipo_pagamento`)
    REFERENCES `form_exemplo`.`tipo` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_pessoa1`
    FOREIGN KEY (`idpessoa`)
    REFERENCES `form_exemplo`.`pessoa` (`idpessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`pedido_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`pedido_item` (
  `idpedido_item` INT NOT NULL AUTO_INCREMENT,
  `idpedido` INT NOT NULL,
  `idproduto` INT NOT NULL,
  `qtd_unidade` INT NOT NULL,
  `preco` FLOAT NOT NULL,
  PRIMARY KEY (`idpedido_item`),
  INDEX `fk_pedido_item_pedido1_idx` (`idpedido` ASC),
  INDEX `fk_pedido_item_produto1_idx` (`idproduto` ASC),
  CONSTRAINT `fk_pedido_item_pedido1`
    FOREIGN KEY (`idpedido`)
    REFERENCES `form_exemplo`.`pedido` (`idpedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_item_produto1`
    FOREIGN KEY (`idproduto`)
    REFERENCES `form_exemplo`.`produto` (`idproduto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`endereco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`endereco` (
  `idendereco` INT NOT NULL AUTO_INCREMENT,
  `endereco` VARCHAR(300) NOT NULL,
  `idpessoa` INT NOT NULL,
  `idtipo_endereco` INT NOT NULL,
  `cod_municipio` INT NOT NULL COMMENT 'código do municipio',
  `cep` VARCHAR(8) NULL,
  `numero` VARCHAR(5) NULL,
  `complemento` VARCHAR(300) NULL,
  `bairro` VARCHAR(300) NULL,
  `cidade` VARCHAR(300) NULL,
  PRIMARY KEY (`idendereco`),
  INDEX `fk_endereco_pessoa1_idx` (`idpessoa` ASC),
  INDEX `fk_endereco_tipo1_idx` (`idtipo_endereco` ASC),
  INDEX `fk_endereco_municipio1_idx` (`cod_municipio` ASC),
  CONSTRAINT `fk_endereco_pessoa1`
    FOREIGN KEY (`idpessoa`)
    REFERENCES `form_exemplo`.`pessoa` (`idpessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_endereco_tipo1`
    FOREIGN KEY (`idtipo_endereco`)
    REFERENCES `form_exemplo`.`tipo` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_endereco_municipio1`
    FOREIGN KEY (`cod_municipio`)
    REFERENCES `form_exemplo`.`municipio` (`cod_municipio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `form_exemplo`.`telefone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`telefone` (
  `idtelefone` INT NOT NULL AUTO_INCREMENT,
  `numero` VARCHAR(45) NOT NULL,
  `idpessoa` INT NOT NULL COMMENT 'dono do telefone',
  `idtipo_telefone` INT NOT NULL COMMENT 'tipo de telefon',
  `idendereco` INT NULL,
  `sit_fixo` CHAR(1) NULL,
  `whastapp` CHAR(1) NULL COMMENT 'informa se o numero tem whastapp',
  `telegram` CHAR(1) NULL COMMENT 'informa se o numero tem telegram',
  PRIMARY KEY (`idtelefone`),
  INDEX `fk_telefone_pessoa1_idx` (`idpessoa` ASC),
  INDEX `fk_telefone_tipo1_idx` (`idtipo_telefone` ASC),
  INDEX `fk_telefone_endereco1_idx` (`idendereco` ASC),
  CONSTRAINT `fk_telefone_pessoa1`
    FOREIGN KEY (`idpessoa`)
    REFERENCES `form_exemplo`.`pessoa` (`idpessoa`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_telefone_tipo1`
    FOREIGN KEY (`idtipo_telefone`)
    REFERENCES `form_exemplo`.`tipo` (`idtipo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_telefone_endereco1`
    FOREIGN KEY (`idendereco`)
    REFERENCES `form_exemplo`.`endereco` (`idendereco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `form_exemplo` ;

-- -----------------------------------------------------
-- Placeholder table for view `form_exemplo`.`acesso_user_menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `form_exemplo`.`acesso_user_menu` (`iduser` INT, `login_user` INT, `idperfil` INT, `nom_perfil` INT, `idmenu` INT, `nom_menu` INT);

-- -----------------------------------------------------
-- View `form_exemplo`.`vw_acesso_user_menu`
-- -----------------------------------------------------
CREATE OR REPLACE VIEW `form_exemplo`.`vw_acesso_user_menu` AS
  select 
      u.iduser
      ,u.login_user
      ,p.idperfil
      ,p.nom_perfil
      ,m.idmenu
      ,m.nom_menu
  from
      acesso_menu as m
      ,acesso_perfil_menu as pm
      ,acesso_perfil as p
      ,acesso_perfil_user as pu
      ,acesso_user as u
  where 
      m.idmenu = pm.idmenu
  and pm.idperfil = p.idperfil
  and pm.idperfil = pu.idperfiluser
  and pu.iduser = u.iduser;

CREATE OR REPLACE VIEW `form_exemplo`.`vw_pessoa_marca_produto` AS
select pe.idpessoa
      ,pe.nome
      ,m.idmarca
      ,m.nom_marca
      ,pr.idproduto
      ,pr.nom_produto
from form_exemplo.pessoa as pe
    ,form_exemplo.marca as m
    ,form_exemplo.produto as pr
where pe.idpessoa = m.idpessoa
  and m.idmarca = pr.idmarca;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
