<?php
/**
 * System generated by SysGen (System Generator with Formdin Framework) 
 * Download SysGen: https://github.com/bjverde/sysgen
 * Download Formdin Framework: https://github.com/bjverde/formDin
 * 
 * SysGen  Version: 1.11.0
 * FormDin Version: 4.19.0
 * 
 * System appev2 created in: 2022-07-30 16:51:54
 */

namespace api_controllers;

use Psr\Http\Message\ServerRequestInterface as Request;
use Psr\Http\Message\ResponseInterface as Response;

class Acesso_perfilAPI
{

    public function __construct()
    {
    }

    //--------------------------------------------------------------------------------
    public static function selectAll(Request $request, Response $response, array $args)
    {
        $controller = new \Acesso_perfil();
        $result = $controller->selectAll();
        $result = \ArrayHelper::convertArrayFormDin2Pdo($result);
        $msg = array( 'qtd'=> \CountHelper::count($result)
                    , 'result'=>$result
        );
        $response = TGenericAPI::getBodyJson($msg,$response,200);
        return $response;
    }
    //--------------------------------------------------------------------------------
    private static function selectByIdInside(array $args)
    {
        $id = $args['id'];
        $controller = new \Acesso_perfil();
        $result = $controller->selectById($id);
        $result = \ArrayHelper::convertArrayFormDin2Pdo($result);
        return $result;
    }
    //--------------------------------------------------------------------------------
    public static function selectById(Request $request, Response $response, array $args)
    {
        $result = self::selectByIdInside($args);
        $msg = array( 'qtd'=> \CountHelper::count($result)
                    , 'result'=>$result
        );

        $response = TGenericAPI::getBodyJson($msg,$response);
        return $response;
    }
    //--------------------------------------------------------------------------------
    public static function save(Request $request, Response $response, array $args)
    {
        try{
            $vo = new \Acesso_perfilVO;
            $msg = \Message::GENERIC_INSERT;
            if($request->getMethod() == 'PUT'){
                $msg = \Message::GENERIC_UPDATE;
                $result = self::selectByIdInside($args);
                $bodyRequest = $result[0];
                $vo = \FormDinHelper::setPropertyVo($bodyRequest,$vo);            
            }
            $bodyRequest = json_decode($request->getBody(),true);        
            if(empty($bodyRequest)){
                $bodyRequest = $request->getParsedBody();
            }
            $vo = \FormDinHelper::setPropertyVo($bodyRequest,$vo);
            $controller = new \Acesso_perfil;
            $controller->save($vo);
            $response = TGenericAPI::getBodyJson($msg,$response,200);
            return $response;
        } catch ( \Exception $e) {
            $msg = $e->getMessage();
            $response = TGenericAPI::getBodyJson($msg,$response,500);
            return $response;
        }
    }
    //--------------------------------------------------------------------------------
    public static function delete(Request $request, Response $response, array $args)
    {
        try{
            $result = self::selectByIdInside($args);
            if( empty($result) ){
                throw new \DomainException('Registro nÃ£o existe');
            }

            $id = $args['id'];
            $controller = new \Acesso_perfil;
            $msg = $controller->delete($id);
            if($msg==true){
                $msg = \Message::GENERIC_DELETE;
                $msg = $msg.' id='.$id;
            }
            $response = TGenericAPI::getBodyJson($msg,$response,200);
            return $response;
        } catch ( \Exception $e) {
            $msg = $e->getMessage();
            $response = TGenericAPI::getBodyJson($msg,$response,500);
            return $response;
        }
    }
}