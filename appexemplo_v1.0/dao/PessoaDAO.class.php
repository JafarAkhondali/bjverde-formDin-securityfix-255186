<?php
/**
 * System generated by SysGen (System Generator with Formdin Framework) 
 * Download SysGen: https://github.com/bjverde/sysgen
 * Download Formdin Framework: https://github.com/bjverde/formDin
 * 
 * SysGen  Version: 1.3.1-alpha
 * FormDin Version: 4.4.3-alpha
 * 
 * System xx created in: 2019-04-11 00:32:52
 */
class PessoaDAO extends TPDOConnection
{

    private static $sqlBasicSelect = 'select
                                      idpessoa
                                     ,nom_pessoa
                                     ,cpf_cnpj
                                     ,tp_pessoa
                                     from pessoa ';

    private static function processWhereGridParameters( $whereGrid )
    {
        $result = $whereGrid;
        if ( is_array($whereGrid) ){
            $where = ' 1=1 ';
            $where = SqlHelper::getAtributeWhereGridParameters($where, $whereGrid, 'IDPESSOA', SqlHelper::SQL_TYPE_NUMERIC);
            $where = SqlHelper::getAtributeWhereGridParameters($where, $whereGrid, 'NOM_PESSOA', SqlHelper::SQL_TYPE_TEXT_LIKE);
            $where = SqlHelper::getAtributeWhereGridParameters($where, $whereGrid, 'CPF_CNPJ', SqlHelper::SQL_TYPE_TEXT_LIKE);
            $where = SqlHelper::getAtributeWhereGridParameters($where, $whereGrid, 'TP_PESSOA', SqlHelper::SQL_TYPE_TEXT_LIKE);
            $result = $where;
        }
        return $result;
    }
    //--------------------------------------------------------------------------------
    public static function selectById( $id )
    {
        if( empty($id) || !is_numeric($id) ){
            throw new InvalidArgumentException();
        }
        $values = array($id);
        $sql = self::$sqlBasicSelect.' where idpessoa = ?';
        $result = self::executeSql($sql, $values );
        return $result;
    }
    //--------------------------------------------------------------------------------
    public static function selectCount( $where=null )
    {
        $where = self::processWhereGridParameters($where);
        $sql = 'select count(idpessoa) as qtd from pessoa';
        $sql = $sql.( ($where)? ' where '.$where:'');
        $result = self::executeSql($sql);
        return $result['QTD'][0];
    }
    //--------------------------------------------------------------------------------
    public static function selectAll( $orderBy=null, $where=null )
    {
        $where = self::processWhereGridParameters($where);
        $sql = self::$sqlBasicSelect
        .( ($where)? ' where '.$where:'')
        .( ($orderBy) ? ' order by '.$orderBy:'');

        $result = self::executeSql($sql);
        return $result;
    }
    //--------------------------------------------------------------------------------
    public static function insert( PessoaVO $objVo )
    {
        $values = array(  $objVo->getNom_pessoa() 
                        , $objVo->getCpf_cnpj() 
                        , $objVo->getTp_pessoa() 
                        );
        return self::executeSql('insert into pessoa(
                                 nom_pessoa
                                ,cpf_cnpj
                                ,tp_pessoa
                                ) values (?,?,?)', $values );
    }
    //--------------------------------------------------------------------------------
    public static function update ( PessoaVO $objVo )
    {
        $values = array( $objVo->getNom_pessoa()
                        ,$objVo->getCpf_cnpj()
                        ,$objVo->getTp_pessoa()
                        ,$objVo->getIdpessoa() );
        return self::executeSql('update pessoa set 
                                 nom_pessoa = ?
                                ,cpf_cnpj = ?
                                ,tp_pessoa = ?
                                where idpessoa = ?',$values);
    }
    //--------------------------------------------------------------------------------
    public static function delete( $id )
    {
        $values = array($id);
        return self::executeSql('delete from pessoa where idpessoa = ?',$values);
    }
}
?>